{"version":3,"sources":["../src/annotations_ctrl.js"],"names":["config","PanelCtrl","angular","moment","inputDatetimeDirective","moduleDefaults","time","title","tags","text","editorDefaults","measurement","tagsColumn","textColumn","titleColumn","AnnotationsCtrl","$scope","$injector","$http","datasourceSrv","backendSrv","alertSrv","_","defaults","panel","events","on","onInitEditMode","bind","onPanelTeardown","get","then","result","availableDatasources","filter","selectedDatasource","module","editor","query","buildQuery","console","log","writeData","timestamp","js","getMoment","getInfluxTimestamp","replace","error","name","ds","url","urls","database","method","data","headers","rsp","set","err","status","picked","dashboard","isTimezoneUtc","utc","datapicked","now","hour","minute","second","format","jsDate","valueOf","addEditorTab","$timeout","cancel","nextTickPromise","templateUrl","directive"],"mappings":"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","file":"annotations_ctrl.js","sourcesContent":["import config from 'app/core/config';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport './css/annotations-panel.css!';\nimport angular from 'angular';\nimport moment from 'moment';\n\n\n// module.html default fields\nconst moduleDefaults = {\n    time: \"\",\n    title: \"\",\n    tags: \"\",\n    text: \"\",\n};\n\n\n// editor.html default fields\nconst editorDefaults = {\n    measurement: \"events\",\n    tagsColumn: \"tags\",\n    textColumn: \"text\",\n    titleColumn: \"title\",\n}\n\n\nexport class AnnotationsCtrl extends PanelCtrl {\n\n    constructor($scope, $injector, $http, datasourceSrv, backendSrv, alertSrv) {\n        super($scope, $injector);\n        _.defaults(this.panel, moduleDefaults, editorDefaults);\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n\n        this.alertSrv = alertSrv;\n        this.backendSrv = backendSrv;\n        this.datasourceSrv = datasourceSrv;\n        this.$http = $http;\n\n        // get influx datasources\n        this.backendSrv.get('/api/datasources')\n            .then((result) => {\n                this.availableDatasources = _.filter(result, {\"type\": \"influxdb\"});\n                this.selectedDatasource = this.availableDatasources[1];\n            });\n\n        this.module = moduleDefaults;\n        this.editor = editorDefaults;\n\n    }\n\n\n    onSubmit() {\n        var query = this.buildQuery();\n        console.log(\"query: \"+query);\n        this.writeData(query);\n    }\n\n\n    buildQuery() {\n\n        // timestamp\n        var timestamp = \"\";\n        if(this.module.time != \"\" && typeof this.module.time != 'undefined') {\n            var js = this.getMoment(this.module.time);\n            timestamp = this.getInfluxTimestamp(js);\n        }\n\n        // tags\n        var tags = this.module.tags.replace(/,/g, \"\\\\,\");\n\n        return \"\" + this.editor.measurement + \",\" + this.editor.tagsColumn + \"=\" + tags + \" \" + this.editor.titleColumn + \"=\\\"\" + this.module.title + \"\\\",\" + this.editor.textColumn + \"=\\\"\" + this.module.text + \"\\\" \" + timestamp;\n    }\n\n\n    writeData(query) {\n        console.log( \"WRITE\", query );\n        this.error = null;\n        return this.datasourceSrv.get(this.selectedDatasource.name).then( (ds) => {\n            this.$http({\n                url: ds.urls[0] + '/write?db=' + ds.database,\n                method: 'POST',\n                data: query,\n                headers: {\n                    \"Content-Type\": \"plain/text\"\n                }\n            }).then((rsp) => {\n                console.log( \"Annotation saved\", rsp );\n                this.alertSrv.set('Saved', 'Successfully saved the annotation', 'success', 3000);\n            }, err => {\n                console.log( \"ERROR\", err );\n                this.error = err.data.error + \" [\"+err.status+\"]\";\n                this.alertSrv.set('Oops', 'Something went wrong: '+this.error, 'error', 6000);\n            });\n        });\n    }\n\n\n    changeTime() {\n        var picked = this.dashboard.isTimezoneUtc() ? moment().utc(this.datapicked) : moment(this.datapicked);\n\n        // set current time to picked date\n        var now = this.dashboard.isTimezoneUtc() ? moment().utc() : moment();\n        picked = picked.hour(now.get('hour'));\n        picked = picked.minute(now.get('minute'));\n        picked = picked.second(now.get('second'));\n\n        this.module.time = picked.format(\"YYYY-MM-DD HH:mm:ss\");\n    }\n\n\n    getMoment(jsDate) {\n        return this.dashboard.isTimezoneUtc() ? moment.utc(jsDate) : moment(jsDate);\n    }\n\n\n    getInfluxTimestamp(jsDate) {\n        return jsDate.valueOf()*1000000;\n    }\n\n\n    onInitEditMode() {\n        this.addEditorTab('Annotations Options', 'public/plugins/novalabs-annotations-panel/editor.html', 2);\n    }\n\n\n    onPanelTeardown() {\n        this.$timeout.cancel(this.nextTickPromise);\n    }\n\n\n}\n\n\nAnnotationsCtrl.templateUrl = 'module.html';\n\nimport {inputDatetimeDirective} from './input_datetime';\nangular.module(\"grafana.directives\").directive('inputSimpleDatetime', inputDatetimeDirective);"]}