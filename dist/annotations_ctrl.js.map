{"version":3,"sources":["../src/annotations_ctrl.js"],"names":["config","PanelCtrl","angular","annotationDefaults","timestamp","title","tags","text","editorDefaults","datasources","datasource","measurement","tagsColumn","textColumn","titleColumn","AnnotationsCtrl","$scope","$injector","$http","datasourceSrv","_","defaults","panel","events","on","onInitEditMode","bind","onPanelTeardown","console","log","annotation","editor","query","buildQuery","writeData","getNow","replace","error","get","then","ds","url","urls","database","method","data","headers","rsp","err","status","Date","getTime","addEditorTab","$timeout","cancel","nextTickPromise","templateUrl"],"mappings":"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","file":"annotations_ctrl.js","sourcesContent":["import config from 'app/core/config';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport './css/annotations-panel.css!';\nimport angular from 'angular';\n\n\nconst annotationDefaults = {\n    timestamp: \"\",\n    title: \"\",\n    tags: \"\",\n    text: \"\",\n};\n\n\nconst editorDefaults = {\n    datasources: [\"influxdb\"],\n    datasource: \"influxdb\",\n    measurement: \"events\",\n    tagsColumn: \"tags\",\n    textColumn: \"text\",\n    titleColumn: \"title\",\n}\n\n\nexport class AnnotationsCtrl extends PanelCtrl {\n\n    constructor($scope, $injector, $http, datasourceSrv) {\n        super($scope, $injector);\n        _.defaults(this.panel, annotationDefaults, editorDefaults);\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n\n        this.datasourceSrv = datasourceSrv;\n        this.$http = $http;\n\n\n        console.log(annotationDefaults);\n        this.annotation = annotationDefaults;\n        this.editor = editorDefaults;\n\n    }\n\n    onSubmit() {\n        var query = this.buildQuery();\n        console.log(\"query: \"+query);\n        this.writeData(query);\n    }\n\n    buildQuery() {\n        // timestamp\n        var timestamp = this.annotation.timestamp;\n        if(timestamp == \"\") {\n            timestamp = this.getNow();\n        }\n        // tags\n        var tags = this.annotation.tags.replace(/,/g, \"\\\\,\");\n\n        return \"\" + this.editor.measurement + \",\" + this.editor.tagsColumn + \"=\" + tags + \" \" + this.editor.titleColumn + \"=\\\"\" + this.annotation.title + \"\\\",\" + this.editor.textColumn + \"=\\\"\" + this.annotation.text + \"\\\" \" + timestamp;\n    }\n\n    writeData(query) {\n        console.log( \"WRITE\", query );\n        this.error = null;\n        return this.datasourceSrv.get(this.panel.datasource).then( (ds) => {\n            this.$http({\n                url: ds.urls[0] + '/write?db=' + ds.database,\n                method: 'POST',\n                data: query,\n                headers: {\n                    \"Content-Type\": \"plain/text\"\n                }\n            }).then((rsp) => {\n                console.log( \"OK\", rsp );\n            }, err => {\n                console.log( \"ERROR\", err );\n                this.error = err.data.error + \" [\"+err.status+\"]\";\n            });\n        });\n    }\n\n    setNow() {\n        this.annotation.timestamp = this.getNow();\n    }\n\n    getNow() {\n        return new Date().getTime()*1000000;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Annotations_Options', 'public/plugins/novalabs-annotations-panel/editor.html', 2);\n    }\n\n    onPanelTeardown() {\n        this.$timeout.cancel(this.nextTickPromise);\n    }\n}\n\nAnnotationsCtrl.templateUrl = 'module.html';\n"]}